//Package contractor - Automatically generated by cinp-codegen from http://192.168.200.10/api/v1/ at 2020-02-24T22:51:21.147599
package contractor

import (
	"fmt"

	cinp "github.com/cinp/go"
)

// Contractor from http://192.168.200.10/api/v1/
type Contractor struct {
	cinp *cinp.CInP
}

// NewContractor creates and returns a new Contractor
func NewContractor(host string, proxy string) (*Contractor, error) {
	var err error
	s := Contractor{}
	s.cinp, err = cinp.NewCInP(host, "/api/v1/", proxy)
	if err != nil {
		return nil, err
	}

	registerAuth(s.cinp)
	registerBluePrint(s.cinp)
	registerSite(s.cinp)
	registerSurvey(s.cinp)
	registerDirectory(s.cinp)
	registerUtilities(s.cinp)
	registerBuilding(s.cinp)
	registerForeman(s.cinp)
	registerSubContractor(s.cinp)
	registerPostOffice(s.cinp)
	registerRecords(s.cinp)
	registerAMT(s.cinp)
	registerVCenter(s.cinp)
	registerManual(s.cinp)

  r, _, err := s.cinp.Describe("/api/v1/")
	if err != nil {
		return nil, err
	}

	if r.APIVersion != "0.9" {
		return nil, fmt.Errorf("API version mismatch.  Got '%s', expected '0.9'", r.APIVersion)
	}

	return &s, nil
}

// SetAuth setts the authencation id and token
func (s *Contractor) SetAuth(authID string, authToken string) {
	s.cinp.SetAuth(authID, authToken)
}

// ExtractIds extract the id(s) from a list of URI
func (s *Contractor) ExtractIds(uriList []string) ([]string, error) {
	return s.cinp.ExtractIds(uriList)
}